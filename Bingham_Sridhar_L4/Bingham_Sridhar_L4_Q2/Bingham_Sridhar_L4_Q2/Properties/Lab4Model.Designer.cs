//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace Bingham_Sridhar_L4_Q2.Properties
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Lab4Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Lab4Entities object using the connection string found in the 'Lab4Entities' section of the application configuration file.
        /// </summary>
        public Lab4Entities() : base("name=Lab4Entities", "Lab4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Lab4Entities object.
        /// </summary>
        public Lab4Entities(string connectionString) : base(connectionString, "Lab4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Lab4Entities object.
        /// </summary>
        public Lab4Entities(EntityConnection connection) : base(connection, "Lab4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<LabMember> LabMembers
        {
            get
            {
                if ((_LabMembers == null))
                {
                    _LabMembers = base.CreateObjectSet<LabMember>("LabMembers");
                }
                return _LabMembers;
            }
        }
        private ObjectSet<LabMember> _LabMembers;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LabMembers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLabMembers(LabMember labMember)
        {
            base.AddObject("LabMembers", labMember);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="firstName">No Metadata Documentation available.</param>
        public ObjectResult<LabMember> FetchLabMemberByFirstName(global::System.String firstName)
        {
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LabMember>("FetchLabMemberByFirstName", firstNameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        public ObjectResult<LabMember> FetchLabMemberByFirstName(global::System.String firstName, MergeOption mergeOption)
        {
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<LabMember>("FetchLabMemberByFirstName", mergeOption, firstNameParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Lab4Model", Name="LabMember")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class LabMember : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new LabMember object.
        /// </summary>
        /// <param name="labMemberId">Initial value of the LabMemberId property.</param>
        /// <param name="lastName">Initial value of the LastName property.</param>
        public static LabMember CreateLabMember(global::System.Int32 labMemberId, global::System.String lastName)
        {
            LabMember labMember = new LabMember();
            labMember.LabMemberId = labMemberId;
            labMember.LastName = lastName;
            return labMember;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 LabMemberId
        {
            get
            {
                return _LabMemberId;
            }
            set
            {
                if (_LabMemberId != value)
                {
                    OnLabMemberIdChanging(value);
                    ReportPropertyChanging("LabMemberId");
                    _LabMemberId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("LabMemberId");
                    OnLabMemberIdChanged();
                }
            }
        }
        private global::System.Int32 _LabMemberId;
        partial void OnLabMemberIdChanging(global::System.Int32 value);
        partial void OnLabMemberIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    
    }

    #endregion

    
}
