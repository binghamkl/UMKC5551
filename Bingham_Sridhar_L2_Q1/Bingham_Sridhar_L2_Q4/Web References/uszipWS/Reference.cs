//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18010
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18010.
// 
#pragma warning disable 1591

namespace Bingham_Sridhar_L2_Q4.uszipWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="USZipSoap", Namespace="http://www.webserviceX.NET")]
    public partial class USZip : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetInfoByZIPOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoByCityOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoByStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInfoByAreaCodeOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public USZip() {
            this.Url = global::Bingham_Sridhar_L2_Q4.Properties.Settings.Default.Bingham_Sridhar_L2_Q4_uszipWS_USZip;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetInfoByZIPCompletedEventHandler GetInfoByZIPCompleted;
        
        /// <remarks/>
        public event GetInfoByCityCompletedEventHandler GetInfoByCityCompleted;
        
        /// <remarks/>
        public event GetInfoByStateCompletedEventHandler GetInfoByStateCompleted;
        
        /// <remarks/>
        public event GetInfoByAreaCodeCompletedEventHandler GetInfoByAreaCodeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetInfoByZIP", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInfoByZIP(string USZip) {
            object[] results = this.Invoke("GetInfoByZIP", new object[] {
                        USZip});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByZIPAsync(string USZip) {
            this.GetInfoByZIPAsync(USZip, null);
        }
        
        /// <remarks/>
        public void GetInfoByZIPAsync(string USZip, object userState) {
            if ((this.GetInfoByZIPOperationCompleted == null)) {
                this.GetInfoByZIPOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByZIPOperationCompleted);
            }
            this.InvokeAsync("GetInfoByZIP", new object[] {
                        USZip}, this.GetInfoByZIPOperationCompleted, userState);
        }
        
        private void OnGetInfoByZIPOperationCompleted(object arg) {
            if ((this.GetInfoByZIPCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByZIPCompleted(this, new GetInfoByZIPCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetInfoByCity", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInfoByCity(string USCity) {
            object[] results = this.Invoke("GetInfoByCity", new object[] {
                        USCity});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByCityAsync(string USCity) {
            this.GetInfoByCityAsync(USCity, null);
        }
        
        /// <remarks/>
        public void GetInfoByCityAsync(string USCity, object userState) {
            if ((this.GetInfoByCityOperationCompleted == null)) {
                this.GetInfoByCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByCityOperationCompleted);
            }
            this.InvokeAsync("GetInfoByCity", new object[] {
                        USCity}, this.GetInfoByCityOperationCompleted, userState);
        }
        
        private void OnGetInfoByCityOperationCompleted(object arg) {
            if ((this.GetInfoByCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByCityCompleted(this, new GetInfoByCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetInfoByState", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInfoByState(string USState) {
            object[] results = this.Invoke("GetInfoByState", new object[] {
                        USState});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByStateAsync(string USState) {
            this.GetInfoByStateAsync(USState, null);
        }
        
        /// <remarks/>
        public void GetInfoByStateAsync(string USState, object userState) {
            if ((this.GetInfoByStateOperationCompleted == null)) {
                this.GetInfoByStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByStateOperationCompleted);
            }
            this.InvokeAsync("GetInfoByState", new object[] {
                        USState}, this.GetInfoByStateOperationCompleted, userState);
        }
        
        private void OnGetInfoByStateOperationCompleted(object arg) {
            if ((this.GetInfoByStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByStateCompleted(this, new GetInfoByStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.webserviceX.NET/GetInfoByAreaCode", RequestNamespace="http://www.webserviceX.NET", ResponseNamespace="http://www.webserviceX.NET", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetInfoByAreaCode(string USAreaCode) {
            object[] results = this.Invoke("GetInfoByAreaCode", new object[] {
                        USAreaCode});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetInfoByAreaCodeAsync(string USAreaCode) {
            this.GetInfoByAreaCodeAsync(USAreaCode, null);
        }
        
        /// <remarks/>
        public void GetInfoByAreaCodeAsync(string USAreaCode, object userState) {
            if ((this.GetInfoByAreaCodeOperationCompleted == null)) {
                this.GetInfoByAreaCodeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInfoByAreaCodeOperationCompleted);
            }
            this.InvokeAsync("GetInfoByAreaCode", new object[] {
                        USAreaCode}, this.GetInfoByAreaCodeOperationCompleted, userState);
        }
        
        private void OnGetInfoByAreaCodeOperationCompleted(object arg) {
            if ((this.GetInfoByAreaCodeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInfoByAreaCodeCompleted(this, new GetInfoByAreaCodeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoByZIPCompletedEventHandler(object sender, GetInfoByZIPCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByZIPCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByZIPCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoByCityCompletedEventHandler(object sender, GetInfoByCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoByStateCompletedEventHandler(object sender, GetInfoByStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetInfoByAreaCodeCompletedEventHandler(object sender, GetInfoByAreaCodeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInfoByAreaCodeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInfoByAreaCodeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591